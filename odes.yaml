# two_hopf:
#   equation:
#     x: '2*pi*y*w + b*u*x +(e*x-x*(x*x+y*y))*100.0'
#     y: '-2*pi*x*w + b*v*y + (e*y-y*(x*x+y*y))*100.0'
#     u: '2*pi*v*f + (e*u-u*(u*u+v*v))*100.0'
#     v: '-2*pi*u*f + (e*v-v*(u*u+v*v))*100.0'
#   parameters:
#     w: 200.0
#     f: 10.5
#     e: 10.0
#     a: 10.0
#     b: 0.0
#   output:
#     x: 
#       gain: 0.4
#     y:
#       gain: 0.4

# vdp:
#   reset:  
#   equation:
#     x: '2*pi*y*w + x[-d]'
#     y: '-2*pi*x*w+ u*(1-x*x)*y'
#   parameters:
#     u: 1000.0
#     w: 200.0
#   output:
#     x: 
#       gain: 0.4
#     y:
#       gain: 0.4

lorenz: &lorenz
  equation:
    x: 'sigma*(y-x)*tau' 
    y: '(x*(rho-z)-y)*tau'
    z: '(x*y-beta*z)*tau'
  parameters:
    sigma: 11
    rho: 28
    beta: 2.6666
    tau: 10.0
  output:
    y: 
      gain: 0.4
      pan: 0

# lorenz2: 
#   <<: *lorenz
#   parameters:
#     sigma: 11
#     rho: 28
#     beta: 2.6666
#     tau: 100.0
#   output:
#     y: 
#       gain: 0.4
#       pan: 0


hopf:
  equation:
    x: ' 2*pi*y*w + (a*sin(2*pi*f*t) + e*x-x*(x*x+y*y))*s'
    y: '-2*pi*x*w + (e*y-y*(x*x+y*y))*s'
  parameters:
    w: 300 + lorenz.x*10
    e: 40.0
    f: 0.5
    a: 1.0
    s: 1000.0
  output:
    x: 
      gain: 0.5
    y:
      gain: 0.5