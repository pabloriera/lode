# two_hopf:
#   equation:
#     x: '2*pi*y*w + b*u*x +(e*x-x*(x*x+y*y))*100.0'
#     y: '-2*pi*x*w + b*v*y + (e*y-y*(x*x+y*y))*100.0'
#     u: '2*pi*v*f + (e*u-u*(u*u+v*v))*100.0'
#     v: '-2*pi*u*f + (e*v-v*(u*u+v*v))*100.0'
#   parameters:
#     w: 200.0
#     f: 10.5
#     e: 10.0
#     a: 10.0
#     b: 0.0
#   output:
#     x: 
#       gain: 0.4
#     y:
#       gain: 0.4

vdp:
  equation:
    x: '2*pi*y*w + d'
    y: '-2*pi*x*w + u*(1.0-x*x)*y'
  parameters:
    u: 800.0 #+ logistic.x*10
    w: 100.0
    d: 0.00 #+ hopf.x*100
  init:
    x: 0.0001
    y: 0.0001
  output:
    x: 
      gain: 0.8
    y:
      gain: 0.8
  scope:
    style: 2
    xZoom: 0.1
    yZoom: 0.1

lorenz: &lorenz
  equation:
    x: '(sigma*(y-x)+i)*tau' 
    y: '(x*(rho-z)-y)*tau'
    z: '(x*y-beti*z)*tau'
  parameters:
    sigma: 11
    rho: 26
    beti: 2.6666
    tau: 100.0
    i: sinosc(3.0)*50
  init:
    x: 1.0
    y: 1.0
    z: 1.0
  output:
    y: 
      gain: 0.8
      pan: 0
  scope:
    style: 2
    xZoom: 0.03
    yZoom: 0.03



# lorenz2: 
#   <<: *lorenz
#   parameters:
#     sigma: 11
#     rho: 28
#     beta: 2.6666
#     tau: 100.0
#   output:
#     y: 
#       gain: 0.4
#       pan: 0


# hopfmod:
#   equation:
#     x: ' 2*pi*y*w + (a*sin(2*pi*f*t) + e*x-x*(x*x+y*y))*s'
#     y: '-2*pi*x*w + (e*y-y*(x*x+y*y))*s'
#   parameters:
#     w: 300
#     e: 20.0
#     f: 5.0
#     a: 20.0
#     s: 1000.0
#   output:
#     x: 
#       gain: 0.5
#     y:
#       gain: 0.5

hr:
  functions:
    phi: 
      args: [x,a,b]
      formula: -a*x*x*x + b*x*x
    psi: 
      args: [x,c,d]
      formula: c - d*x*x
  equation:
    x: (y + phi(x,a,b) - z + i)*tau
    y: (psi(x,c,d) - y)*tau
    z: (r*(s*(x-x_r)-z))*tau
  parameters:
    a: 1
    b: 2.2
    c: 4
    d: 5
    r: 0.005
    s: 1
    xr: -1.6
    i: -2 + sinosc(3.0)*4.0
    tau: 300
  output:
    x: {gain: 1.4, pan: -1}
    y: {gain: 1.4, pan: 1}
  scope:
    style: 2
    xZoom: 0.2
    yZoom: 0.01


logistic:
  discrete: true
  equation:
    x: r*x*(1-x)
  init:
    x: 0.01
  parameters:
    r: 3.4
    hz: 1.0
  scope:
    style: 0
    xZoom: 1
    yZoom: 1
    fill: 0

hopf:
  equation:
    x: ' 2*pi*y*w + (e*x-x*(x*x+y*y)+i)*s'
    y: '-2*pi*x*w + (e*y-y*(x*x+y*y)+i)*s'
  parameters:
    w: 450
    e: 3.0 #(2.0 + lorenz.x)*2.0
    s: 100.0
    i: 0.0 + sinosc(3.0)*100.0 + sinosc(4.0)*50 + noise(200)*200.0 + hopf.x[-0.010]*10
  output:
    x: {gain: 0.8, pan: -1}
    y: {gain: 0.8, pan: 1}
  scope:
    style: 2
    xZoom: 0.1
    yZoom: 0.1


# henon:
#   map:
#     x: '1-a*x*x+y'
#     y: 'b*x'
#   init:
#     x: 0
#     y: 1
#   parameters:
#     a: 1.4
#     b: 0.3



# hopf2:
#   equation:
#     x: ' 2*pi*y*w + (e*x-x*(x*x+y*y))*s'
#     y: '-2*pi*x*w + (e*y-y*(x*x+y*y))*s'
#   parameters:
#     w: 310 #+ lorenz.x*100
#     e: 10.0
#     s: 100.0
#   output:
#     x: 
#       gain: 0.2
#     y:
#       gain: 0.2

# map:
#   discrete: true
#   equation:
#     x: y
#     y: -x
#   init:
#     x: 1
#     y: -1
#   parameters:
#     hz: 4

